a.text-sm.text-blue-600(href=index_path class='hover:text-blue-700 hover:underline')
  ' &larr; back to overview

- if params[:error]
  pre.text-red-500= params[:error]
h2.font-semibold.text-xl.text-gray-500.pt-12
  = @feature.name

.w-8.h-1.bg-gray-300.my-10
main.p-6.bg-gray-100.max-w-lg.w-full.text-sm.rounded-sm
  form#updateFormSubmit action=feature_path(@feature.name) method='POST'
    input type='hidden' name='last_updated_at' value=(@feature.data['updated_at'])
    .mb-5
      label.block.text-gray-500.mb-2(for='description') Description
      input.appearance-none.border.rounded-sm.w-full.py-2.px-4.text-gray-600.leading-relaxed.bg-white(
        name='description'
        id='description'
        value=@feature.data['description']
        class='hover:border-gray-500'
      )

    .mb-5
      label.block.text-gray-500.mb-2(for='groups')
        | Groups
        span.ml-1.text-gray-400
          | (multi-select)
      select.block.appearance-none.w-full.bg-white.border.border-gray-300.px-4.py-3.rounded-sm.leading-relaxed(name="groups[]" id='groups' multiple=true size=(@rollout.groups.count + 1))
        option.py-1.px-1(value='' selected=(@feature.groups.count == 0))
          = '(none)'
        - @rollout.groups.each do |group|
          option.py-1.px-1(
            value=group
            selected=@feature.groups.include?(group)
          )
            = group

    .mb-5
      label.block.text-gray-500.mb-2(for='percentage') Groups percentage
      input.appearance-none.border.rounded-sm.w-full.py-2.px-4.text-gray-600.leading-relaxed.bg-white(
        name='percentage'
        id='percentage'
        value=@feature.percentage
        class='hover:border-gray-500'
        type='number'
        step='0.1'
      )

    .mb-5
      label.block.text-gray-500.mb-2
        | Users
        span.ml-1.text-gray-400
          | (active regardless of groups and percentage)

      - if @feature.users.count > 150
        .appearance-none.border.rounded-sm.w-full.py-2.px-4.text-gray-600.leading-relaxed.bg-gray-100
          = @feature.users.count
      - else
        textarea.appearance-none.border.rounded-sm.w-full.py-2.px-4.text-gray-600.leading-relaxed.bg-white(
          name='users'
          id='users'
          value=@feature.users.join(', ')
          class='hover:border-gray-500'
          rows='2'
        )
          = @feature.users.join(', ')

    .mb-5
      label.block.text-gray-500.mb-2 
        span.flex.items-center.cursor-pointer.select-none onclick="toggleCollapsible('matching-explanation')"
          | How does matching work? 
          span.ml-2.text-gray-400#matching-toggle ▶
      .appearance-none.border.rounded-sm.w-full.py-3.px-4.text-gray-600.leading-relaxed.bg-gray-50#matching-explanation style="display:none"
        p.mb-2
          | <strong>$rollout.active?(:#{@feature.name})</strong><br>Will match only if percentage is set to 100
        p.mb-2
          | <strong>$rollout.active?(:#{@feature.name}, manolito)</strong><br>will match if manolito is in the active users list OR (The user matches the percentage AND the user is in one of the active groups)
  .flex.items-center.justify-end
    form action=delete_feature_path(@feature.name) method='POST'
      button.mr-5.text-gray-600(class='hover:underline' type='submit' onclick="return confirm('Are you sure you want to delete #{sanitized_name(@feature.name)}?')")
        | Delete
    button.py-4.px-5.bg-gray-700.text-gray-200.rounded-sm.font-bold.leading-none.transition-colors.duration-200(
      type='submit'
      class='hover:bg-gray-800'
      form='updateFormSubmit'
    )
      | Update

- history_events = @rollout.respond_to?(:logging) ? @rollout.logging.events(@feature.name).reverse : []

== slim :"features/partials/event_log", locals: { events: history_events }

// Add JavaScript for collapsible functionality at the bottom of the file
javascript:
  function toggleCollapsible(id) {
    const element = document.getElementById(id);
    const toggle = document.getElementById('matching-toggle');
    
    if (element.style.display === 'none') {
      element.style.display = 'block';
      toggle.innerHTML = '▼';
    } else {
      element.style.display = 'none';
      toggle.innerHTML = '▶';
    }
  }
